<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DreamEleven - @ViewData["Title"]</title>

    <link rel="icon" type="image/png" href="~/images/logo.png" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/field.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DreamEleven.Web.styles.css" asp-append-version="true" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

</head>


<body class="blurred-background">

    @await Html.PartialAsync("_Navbar")

    @if (ViewData["NoContainer"] as bool? != true)
    {
        <div class="container" style="background: rgba(22, 21, 21, 0.75); border-radius: 10px; padding: 20px;">
            @RenderBody()
        </div>
    }
    else
    {
        @RenderBody()
    }

    <footer class="footer" style="background: rgba(14, 13, 13, 0.9); color: #a19797;">
        <div class=" container text-center">
            &copy; 2025 - DreamEleven
        </div>
    </footer>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/field.js" asp-append-version="true"></script>


    <script>
        const searchInput = document.querySelector('input[name="query"]');
        let timeout = null;
        let resultBox;

        searchInput.addEventListener('input', function () {
            clearTimeout(timeout);

            timeout = setTimeout(() => {
                const query = this.value.trim();
                if (query.length === 0) {
                    if (resultBox) resultBox.remove();
                    return;
                }

                fetch(`/Player/SearchPlayers?query=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (resultBox) resultBox.remove();
                        resultBox = document.createElement('div');
                        resultBox.className = 'list-group position-absolute';
                        resultBox.style.width = searchInput.offsetWidth + "px";
                        resultBox.style.top = searchInput.offsetTop + searchInput.offsetHeight + "px";
                        resultBox.style.left = searchInput.offsetLeft + "px";
                        resultBox.style.zIndex = "1000";

                        if (data.length === 0) {
                            const item = document.createElement('div');
                            item.className = 'list-group-item';
                            item.textContent = 'Sonuç bulunamadı';
                            resultBox.appendChild(item);
                        } else {
                            data.forEach(player => {
                                const item = document.createElement('a');
                                item.className = 'list-group-item list-group-item-action d-flex align-items-center';
                                item.href = `/player/${player.slug}`;

                                const img = document.createElement('img');
                                img.src = player.imageUrl;
                                img.alt = player.name;
                                img.style.width = '40px';
                                img.style.height = '40px';
                                img.style.objectFit = 'cover';
                                img.className = 'rounded me-2';

                                const text = document.createElement('span');
                                text.textContent = player.name;

                                item.appendChild(img);
                                item.appendChild(text);
                                resultBox.appendChild(item);
                            });
                        }
                        searchInput.parentNode.appendChild(resultBox);
                    });
            }, 300);
        });

        document.addEventListener('click', function (event) {
            if (resultBox && !searchInput.contains(event.target)) {
                resultBox.remove();
            }
        });
    </script>


    @await RenderSectionAsync("Scripts", required: false)

</body>

</html>
