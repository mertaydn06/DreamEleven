@model List<DreamEleven.Entities.Team>

@{
    ViewData["Title"] = "Ana Sayfa";
}

<div class="container md-4">
    <div class="row">

        <!-- Ana içerik: Takımlar -->
        <div class="col-md-8 pe-4">
            <h3 class="mb-3 text-center" style="color: #ffffff;"><i class="bi bi-clipboard"></i>Takımlar</h3>

            @if (!Model.Any())
            {
                <p>Henüz hiç takım oluşturulmamış.</p>
            }
            @foreach (var team in Model)
            {
                <div class="card" style="margin-bottom: 50px;">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <a href="/team/details/@team.Id" class="text-decoration-none fw-bold">@team.TeamName</a>
                        <span>@team.CreatedAt.ToShortDateString()</span>
                    </div>

                    <div class="card-body">
                        <!-- Futbol sahası -->
                        <div class="football-field position-relative mb-3">
                            <div class="penalty-box top-box">
                                <div class="penalty-dot"></div>
                            </div>
                            <div class="penalty-box bottom-box">
                                <div class="penalty-dot"></div>
                            </div>

                            <div class="position-relative h-100">
                                @foreach (var tp in team.TeamPlayers)
                                {
                                    <div class="player-slot position-absolute" data-position="@tp.PositionSlot">
                                        <a href="/player/@tp.Player.Slug" class="text-decoration-none text-dark">
                                            <div class="player-card">
                                                <img src="@tp.Player.ImageUrl" alt="@tp.Player.Name">
                                                <div class="player-info">
                                                    <div class="player-name">@tp.Player.Name</div>
                                                    <div class="player-overall">@tp.Player.Overall</div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Kullanıcı Bilgisi - Daha küçük -->
                        <div class="d-flex justify-content-end align-items-center"
                            style="margin-top: -4px; margin-bottom: -7px; padding: 0 4px;">
                            <a href="/profile/@ViewBag.TeamOwners[team.Id]"
                                class="d-flex align-items-center text-decoration-none" style="font-size: 13px;">
                                <img src="@(string.IsNullOrEmpty(ViewBag.TeamOwnerImages[team.Id]) ? "/images/User.jpg" : ViewBag.TeamOwnerImages[team.Id])"
                                    alt="@ViewBag.TeamOwners[team.Id]" class="rounded-circle"
                                    style="width: 22px; height: 22px; object-fit: cover; margin-right: 5px;">
                                <span class="fw-semibold">@ViewBag.TeamOwners[team.Id]</span>
                            </a>
                        </div>


                    </div>
                </div>
            }


            <!-- Pagination işlemi -->
            <div class="d-flex justify-content-center mt-4" style="width: 100%;">
                <nav>
                    <ul class="pagination">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)">« Önceki</a>
                            </li>
                        }

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)">Sonraki »</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>

        </div>

        <!-- Sağ: Popüler Oyuncular ve Son Takımlar -->
        <div class="col-md-4" style="margin-top: 45px;">
            <div style="position: sticky; top: 35px;">

                <!-- Sağ: Popüler Oyuncular -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Popüler Oyuncular</h5>
                    </div>

                    <div class="card-body p-2">
                        @{
                            var players = ViewBag.PopularPlayers as List<DreamEleven.Entities.Player>;
                        }
                        @if (players != null && players.Any())
                        {
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var player in players)
                                {
                                    <a href="/player/@player.Slug" class="btn btn-outline-secondary btn-sm">
                                        @player.Name
                                    </a>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">Hiç oyuncu bulunamadı.</p>
                        }
                    </div>
                </div>

                <!-- Sağ: Haftanın Takımları -->
                <div class="card" style="margin-top: 40px;">
                    <div class="card-header remove-border">
                        <h5 class="mb-0 text-center">Haftanın En İyi Takımları</h5>
                    </div>

                    <div class="card-body p-2">
                        @{
                            var lastTeams = ViewBag.LastTeams as List<DreamEleven.Entities.Team>;
                        }
                        @if (lastTeams != null && lastTeams.Any())
                        {
                            foreach (var team in lastTeams)
                            {
                                <div class="d-flex align-items-center mb-2 mb-3 pb-2"
                                    style="border-bottom: 1px solid rgba(85, 85, 85, 0.651);">
                                    <i class="bi bi-shield-fill-check text-primary me-2"></i>
                                    <a href="/team/details/@team.Id" class="fw-semibold text-decoration-none">
                                        @team.TeamName
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Henüz takım yok.</p>
                        }
                    </div>
                </div>

                <!-- Sağ: Günün Oyuncusu -->
                <div class="card" style="margin-top: 40px;">
                    <div class="card-header  remove-border">
                        <h5 class="mb-0 text-center">Haftanın Oyuncusu</h5>
                    </div>

                    <div class="card-body text-center">
                        @{
                            var randomPlayer = ViewBag.RandomPlayer as DreamEleven.Entities.Player;
                        }
                        @if (randomPlayer != null)
                        {
                            <a href="/player/@randomPlayer.Slug" class="text-decoration-none">
                                <div class="mb-2">
                                    <img src="@randomPlayer.ImageUrl" alt="@randomPlayer.Name"
                                        style="width: 125px; height: 125px; object-fit: cover; border-radius: 20px;">
                                </div>
                                <div class="fw-semibold">@randomPlayer.Name</div>
                            </a>
                        }
                        else
                        {
                            <p class="text-muted">Oyuncu bulunamadı.</p>
                        }
                    </div>
                </div>


            </div>
        </div>

    </div>
</div>
</div>
</div>



@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.football-field').forEach(field => {
                const formation = field.dataset.formation ?? "4-4-2";
                const playerSlots = field.querySelectorAll('.player-slot');

                // Pozisyona göre gruplar
                const defenders = ['CB', 'CB1', 'CB2', 'CB3', 'LB', 'RB', 'LWB', 'RWB'];
                const midfielders = ['CM', 'CM1', 'CM2', 'CM3', 'LM', 'RM', 'CAM', 'CDM'];
                const forwards = ['ST', 'ST1', 'ST2', 'LW', 'RW', 'CF'];

                function getGroup(position) {
                    if (defenders.some(d => position.startsWith(d))) return 'DEF';
                    if (midfielders.some(m => position.startsWith(m))) return 'MID';
                    if (forwards.some(f => position.startsWith(f))) return 'FWD';
                    if (position === 'GK') return 'GK';
                    return 'MID';
                }

                const groupedSlots = { GK: [], DEF: [], MID: [], FWD: [] };

                playerSlots.forEach(p => {
                    const group = getGroup(p.dataset.position);
                    groupedSlots[group].push(p);
                });

                const positionsY = {
                    GK: '85%',
                    DEF: '63%',
                    MID: '40%',
                    FWD: '15%'
                };

                function distributeHorizontally(players, topPercent) {
                    const count = players.length;
                    players.forEach((p, i) => {
                        const x = (100 / (count + 1)) * (i + 1);
                        p.style.left = `${x}%`;
                        p.style.top = topPercent;
                    });
                }

                distributeHorizontally(groupedSlots.DEF, positionsY.DEF);
                distributeHorizontally(groupedSlots.MID, positionsY.MID);
                distributeHorizontally(groupedSlots.FWD, positionsY.FWD);
                distributeHorizontally(groupedSlots.GK, positionsY.GK);
            });
        });
    </script>


    <style>
        /* Saha alanının arka planı, kenar çizgileri ve genel görünümü */
        .football-field {
            background-image: linear-gradient(#49884b, #388E3C);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            position: relative;
            height: 600px;
            border-radius: 10px;
        }

        /* Orta saha çizgisi */
        .football-field::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background: rgba(255, 255, 255, 0.6);
        }

        /* Orta saha çemberi */
        .football-field::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100px;
            height: 100px;
            border: 2px solid rgba(255, 255, 255, 0.6);
            border-radius: 50%;
        }

        /* Ceza sahası kutuları */
        .penalty-box {
            position: absolute;
            width: 180px;
            height: 70px;
            border: 2px solid white;
            left: 50%;
            transform: translateX(-50%);
            z-index: 0;
        }

        /* Üst ceza sahası */
        .top-box {
            top: 0;
            border-top: none;
        }

        /* Alt ceza sahası */
        .bottom-box {
            bottom: 0;
            border-bottom: none;
        }

        /* Oyuncu yerleşim noktası (slot) */
        .player-slot {
            position: absolute;
            display: flex;
            align-items: center;
            justify-content: center;
            transform: translate(-50%, -50%);
            z-index: 10;
        }

        /* Oyuncu kartı kutusu */
        .player-card {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            width: 80px;
            height: 102px;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 6px;
            transition: transform 0.25s ease;
        }

        /* Kart üzerine gelince büyüme efekti */
        .player-card:hover {
            transform: scale(1.1);
        }

        /* Oyuncu fotoğrafı */
        .player-card img {
            width: 67px;
            height: 67px;
            border-radius: 50%;
            object-fit: cover;
            background: white;
        }

        /* Oyuncu ismi ve puanı kutusu */
        .player-info {
            text-align: center;
            margin-top: 5px;
        }

        /* Oyuncu ismi */
        .player-name {
            font-size: 11px;
            font-weight: 600;
            text-align: center;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            max-width: 80px;
            height: 25px;
            line-height: 1.1;
        }

        /* Oyuncu genel puanı */
        .player-overall {
            background: #1a5388;
            color: white;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            line-height: 24px;
            font-size: 12px;
            font-weight: bold;
            margin: 0 auto;
        }
    </style>

}
